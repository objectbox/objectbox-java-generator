// Configures common publishing settings

apply plugin: "maven-publish"
apply plugin: "signing"

javadoc {
    if(JavaVersion.current().isJava8Compatible()) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

def hasSigningProperties() {
    return (project.hasProperty('signingKeyId')
            && project.hasProperty('signingKeyFile')
            && project.hasProperty('signingPassword'))
}

signing {
    if (hasSigningProperties()) {
        String signingKey = new File(signingKeyFile).text
        useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
        sign configurations.archives
    } else {
        println "WARNING: Signing information missing/incomplete for ${project.name}"
    }
}


publishing {
    repositories {
        maven {
            name = 'GitLab'
            if (project.hasProperty('gitlabUrl') && project.hasProperty('gitlabPrivateToken')) {
                // "https://gitlab.example.com/api/v4/projects/<PROJECT_ID>/packages/maven"
                url = "$gitlabUrl/api/v4/projects/18/packages/maven"
                println "GitLab repository set to $url."

                credentials(HttpHeaderCredentials) {
                    name = "Private-Token"
                    value = gitlabPrivateToken
                }
                authentication {
                    header(HttpHeaderAuthentication)
                }
            } else {
                println "WARNING: Can not publish to GitLab: gitlabUrl or gitlabPrivateToken not set."
            }
        }
        // Note: Sonatype repo created by publish-plugin, see root build.gradle.
    }

    publications {
        mavenJava(MavenPublication) {
            pom {
                packaging = 'jar'
                url = 'https://objectbox.io'
                licenses {
                    license {
                        name = 'GNU General Public License, Version 3'
                        url = 'https://www.gnu.org/licenses/gpl.txt'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'ObjectBox'
                        name = 'ObjectBox'
                    }
                }
                issueManagement {
                    system = 'GitHub Issues'
                    url = 'https://github.com/objectbox/objectbox-java/issues'
                }
                organization {
                    name = 'ObjectBox Ltd.'
                    url = 'https://objectbox.io'
                }
                scm {
                    connection = 'scm:git@github.com:objectbox/objectbox-java.git'
                    developerConnection = 'scm:git@github.com:objectbox/objectbox-java.git'
                    url = 'https://github.com/objectbox/objectbox-java'
                }
            }
        }
    }
}
