apply plugin: 'java'
apply plugin: 'kotlin'

group = 'io.objectbox'
archivesBaseName = 'objectbox-generator'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    compile "io.objectbox:objectbox-java:$objectbox_java_version"
    compile 'org.freemarker:freemarker:2.3.28'
    compile 'org.greenrobot:essentials:3.0.0-RC1'
    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile 'junit:junit:4.12'
}

test {
    doFirst {
        mkdir 'test-out'
    }
    doLast {
        delete 'test-out'
    }
}

javadoc {
    failOnError = false
    title = "ObjectBox Generator ${version} API"
    // Unfinished APIs:
    excludes = ['org/greenrobot/daogenerator/Query*']
    options.bottom = /*'Available under the GPLv3 - */'<i>Copyright &#169; 2017 <a href="http://objectbox.io/">ObjectBox Ltd</a>. All Rights Reserved.</i>'
    doLast {
        copy {
            from '../javadoc-style/'
            into "build/docs/javadoc/"
        }
    }
}

apply from: rootProject.file("gradle/objectbox-publish.gradle")

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
//    from sourceSets.main.allSource
    from 'README'
}

artifacts {
    // jar added by java plugin.
    archives javadocJar
    archives sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            // Basic definitions are defined in root project
            pom.project {
                name 'ObjectBox Generator'
                description 'Code generator for ObjectBox, the superfast NoSQL database for Objects'

                licenses {
                    license {
                        name 'GNU General Public License, Version 3'
                        url 'http://www.gnu.org/licenses/gpl.txt'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}