<#--

Copyright (C) 2017 Markus Junginger, greenrobot (http://greenrobot.org)
                                                                           
This file is part of ObjectBox Generator.
                                                                           
ObjectBox Generator is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by       
the Free Software Foundation, either version 3 of the License, or          
(at your option) any later version.                                        
ObjectBox Generator is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of             
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              
GNU General Public License for more details.                               
                                                                           
You should have received a copy of the GNU General Public License          
along with ObjectBox Generator.  If not, see <http://www.gnu.org/licenses/>.

-->
<#-- @ftlvariable name="entity" type="io.objectbox.generator.model.Entity" -->
<#-- @ftlvariable name="schema" type="io.objectbox.generator.model.Schema" -->
<#-- @ftlvariable name="propertyCollector" type="java.lang.String" -->

<#assign toBindType = {"Boolean":"Long", "Byte":"Long", "Short":"Long", "Int":"Long", "Long":"Long", "Float":"Double", "Double":"Double", "String":"String", "ByteArray":"Blob", "Date": "Long" } />
<#assign toCursorType = {"Boolean":"Short", "Byte":"Short", "Short":"Short", "Int":"Int", "Long":"Long", "Float":"Float", "Double":"Double", "String":"String", "ByteArray":"Blob", "Date": "Long"  } />
package ${entity.javaPackageDao};

<#if entity.incomingToManyRelations?has_content>
import java.util.List;
</#if>

import io.objectbox.BoxStore;
import io.objectbox.Cursor;
import io.objectbox.Transaction;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;
<#if entity.toManyRelations?has_content>
import io.objectbox.relation.ToMany;
</#if>
<#if entity.javaPackageDao != schema.defaultJavaPackageDao>
//import ${schema.defaultJavaPackageDao}.${schema.prefix}DaoSession;

</#if>
<#if entity.additionalImportsDao?has_content>
<#list entity.additionalImportsDao as additionalImport>
import ${additionalImport};
</#list>

</#if>
<#if entity.javaPackageDao != entity.javaPackage>
import ${entity.javaPackage}.${entity.className};

</#if>
<#if entity.protobuf>
import ${entity.javaPackage}.${entity.className}.Builder;

</#if>
// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * ObjectBox generated Cursor implementation for "${entity.dbName}".
 * Note that this is a low-level class: usually you should stick to the Box class.
 */
public final class ${entity.classNameDao} extends Cursor<${entity.className}> {
    @Internal
    static final class Factory implements CursorFactory<${entity.className}> {
        public Cursor<${entity.className}> createCursor(Transaction tx, long cursorHandle, BoxStore boxStoreForEntities) {
            return new ${entity.classNameDao}(tx, cursorHandle, boxStoreForEntities);
        }
    }

    private static final ${entity.className}_.${entity.className}IdGetter ID_GETTER = ${entity.className}_.__ID_GETTER;

<#list entity.properties as property><#if property.customType?has_content><#--
-->    private final ${property.converterClassName} ${property.propertyName}Converter = new ${property.converterClassName}();
</#if></#list>
<#list entity.incomingToManyRelations as toMany>
    // TODO private Query<${toMany.targetEntity.className}> ${toMany.sourceEntity.className?uncap_first}_${toMany.name?cap_first}Query;
</#list>

<#-- Property IDs get verified in Cursor base class -->
<#list entity.properties as property>
    <#if !property.isPrimaryKey()>
    private final static int __ID_${property.propertyName} = ${entity.className}_.${property.propertyName}.id;
    </#if>
</#list>

    public ${entity.classNameDao}(Transaction tx, long cursor, BoxStore boxStore) {
        super(tx, cursor, ${entity.className}_.__INSTANCE, boxStore);
    }

    @Override
    public final long getId(${entity.className} entity) {
        return ID_GETTER.getId(entity);
    }

    /**
     * Puts an object into its box.
<#if entity.protobuf>
     *
     * Note: Protocol buffer objects are immutable, so the ID cannot be updated (ID == 0, "insert").
</#if>
     *
     * @return The ID of the object within its box.
     */
    @Override
    public final long put(${entity.className} entity) {
<#list entity.toOneRelations as toOne>
        if(entity.${toOne.nameToOne}.internalRequiresPutTarget()) {
            Cursor<${toOne.targetEntity.className}> targetCursor = getRelationTargetCursor(${toOne.targetEntity.className}.class);
            try {
                entity.${toOne.nameToOne}.internalPutTarget(targetCursor);
            } finally {
                targetCursor.close();
            }
        }
</#list>
<#--
Do ToOnes before because we need the target's ID before the put.
Do ToMany after because the targets entities need our ID.
-->
${propertyCollector}
<#list entity.toManyRelations as toMany>
    if (entity.${toMany.name} instanceof ToMany) {
        ToMany<${toMany.targetEntity.className}> toMany = (ToMany<${toMany.targetEntity.className}>) entity.${toMany.name};
        if (toMany.internalRequiresPutTarget()) {
            toMany.internalPutTarget(getRelationTargetCursor(${toMany.targetEntity.className}.class));
        }
    }
</#list>
        return __assignedId;
    }

<#if entity.active>
    // TODO @Override
    //protected final void attachEntity(${entity.className} entity) {
        // TODO super.attachEntity(entity);
        //entity.__boxStore = boxStoreForEntities;
    //}

</#if>

}
