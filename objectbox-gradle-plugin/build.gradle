// https://docs.gradle.org/current/userguide/custom_plugins.html
apply plugin: 'kotlin'
apply plugin: 'groovy' // for dsl tests
apply plugin: 'de.fuerstenau.buildconfig'
apply plugin: 'idea' // to pick up generated BuildConfig in IntelliJ
apply plugin: 'maven-publish'

group = 'io.objectbox'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

// For integration tests (TestKit): Write the plugin's classpath to a file to share with the tests.
task createClasspathManifest {
    def outputDir = file("$buildDir/$name")
    def files = sourceSets.test.runtimeClasspath

    inputs.files(sourceSets.main.runtimeClasspath)
            .withPropertyName("runtimeClasspath")
            .withNormalizer(ClasspathNormalizer)
    outputs.dir(outputDir)
            .withPropertyName("outputDir")

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

dependencies {
    implementation gradleApi()
    implementation project(':objectbox-code-modifier')
    compileOnly "com.android.tools.build:gradle:$android_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.javassist:javassist:3.27.0-GA'

    // For Transformer to resolve class dependencies to (real) ObjectBox classes
    implementation "io.objectbox:objectbox-java:$objectbox_java_version"
    implementation "io.objectbox:objectbox-java-api:$objectbox_java_version"

    testImplementation gradleTestKit()
    testRuntimeOnly files(createClasspathManifest)
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation 'com.google.truth:truth:1.0'
    testImplementation "com.squareup.moshi:moshi:$moshi_version"
    // For plugin apply tests and outdated TestKit tests (dir "test-gradle-projects").
    testImplementation "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    testImplementation "com.android.tools.build:gradle:$android_version"
}

buildConfig {
    // rename to avoid conflict with other build config files (modules use same root package)
    clsName = 'GradlePluginBuildConfig'
    // Versions of libraries to add to projects applying the plugin.
    buildConfigField 'String', 'APPLIES_JAVA_VERSION', {"$applies_ob_java_version"}
    buildConfigField 'String', 'APPLIES_NATIVE_VERSION', {"$applies_ob_native_version"}
}

// For integration tests (TestKit): publish other modules to repository in build folder.
evaluationDependsOn(":objectbox-code-modifier")
evaluationDependsOn(":objectbox-generator")
evaluationDependsOn(":objectbox-processor")
publishing {
    repositories {
        maven {
            url = "$buildDir/repository"
            name = "test"
        }
    }
    publications {
        modifier(MavenPublication) {
            def fromProject = project(":objectbox-code-modifier")
            from(fromProject.components.java)
            groupId = fromProject.group.toString()
            artifactId = fromProject.name
            version = fromProject.version.toString()
        }
        generator(MavenPublication) {
            def fromProject = project(":objectbox-generator")
            from(fromProject.components.java)
            groupId = fromProject.group.toString()
            artifactId = fromProject.name
            version = fromProject.version.toString()
        }
        processor(MavenPublication) {
            def fromProject = project(":objectbox-processor")
            from(fromProject.components.java)
            groupId = fromProject.group.toString()
            artifactId = fromProject.name
            version = fromProject.version.toString()
        }
    }
}
tasks {
    test {
        inputs.files(
                project(":objectbox-code-modifier").tasks.named("jar"),
                project(":objectbox-generator").tasks.named("jar"),
                project(":objectbox-processor").tasks.named("jar")
        )
        dependsOn "publishModifierPublicationToTestRepository", "publishGeneratorPublicationToTestRepository", "publishProcessorPublicationToTestRepository"

        // For integration tests (TestKit): steal project properties required for TestKit projects.
        systemProperty("internalObjectBoxRepo", internalObjectBoxRepo)
        systemProperty("internalObjectBoxRepoUser", internalObjectBoxRepoUser)
        systemProperty("internalObjectBoxRepoPassword", internalObjectBoxRepoPassword)
    }
}

apply from: rootProject.file("gradle/objectbox-publish.gradle")

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from 'README'
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from 'README'
}

artifacts {
    // jar added by java plugin.
    archives javadocJar
    archives sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            // Basic definitions are defined in root project
            pom.project {
                name 'ObjectBox Gradle Plugin'
                description 'Gradle Plugin for ObjectBox (NoSQL for Objects)'

                licenses {
                    license {
                        name 'GNU General Public License, Version 3'
                        url 'http://www.gnu.org/licenses/gpl.txt'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}
