package io.objectbox.codemodifier.test.other;

import io.objectbox.annotation.Entity;
import io.objectbox.annotation.Generated;
import io.objectbox.annotation.Id;
import io.objectbox.annotation.Backlink;
import io.objectbox.annotation.Relation;
import io.objectbox.relation.ToMany;

import io.objectbox.codemodifier.test.Customer;
import io.objectbox.codemodifier.test.Order;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.BoxStore;
import io.objectbox.codemodifier.test.one.OnePackage_;
import io.objectbox.relation.ToOne;

@Entity
public class OtherPackage {

    @Id
    long id;

    long customerId;

    @Relation
    Customer customer;

    @Backlink(to = "other")
    ToMany<OnePackage> ones = new ToMany<>(this, OtherPackage_.ones);

    /** Used to resolve relations */
    @Internal
    @Generated(1307364262)
    transient BoxStore __boxStore;

    @Generated(1202255671)
    @Internal
    /** This constructor was generated by ObjectBox and may change any time. */
    public OtherPackage(long id, long customerId) {
        this.id = id;
        this.customerId = customerId;
    }

    @Generated(1677191657)
    public OtherPackage() {
    }

    @Internal
    @Generated(519009093)
    transient ToOne<Customer> customerToOne = new ToOne<>(this, OtherPackage_.customer);

    /** To-one relationship, resolved on first access. */
    @Generated(982764858)
    public Customer getCustomer() {
        customer = customerToOne.getTarget(this.customerId);
        return customer;
    }

    /** Set the to-one relation including its ID property. */
    @Generated(1896550034)
    public void setCustomer(Customer customer) {
        customerToOne.setTarget(customer);
        this.customer = customer;
    }

}
