apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'de.fuerstenau.buildconfig'
apply plugin: 'idea' // to pick up generated BuildConfig in IntelliJ

group = 'io.objectbox'
archivesBaseName = 'objectbox-code-modifier'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.greenrobot:essentials:$essentials_version"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    implementation "io.objectbox:objectbox-java-api:$objectbox_java_version"
    implementation project (':objectbox-generator')

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation 'com.natpryce:hamkrest:1.7.0.0'
}

buildConfig {
    // rename to avoid conflict with other build config files (modules use same root package)
    clsName = 'CodeModifierBuildConfig'
}

apply from: rootProject.file("gradle/objectbox-publish.gradle")

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from 'README'
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from 'README'
}

artifacts {
    // jar added by java plugin.
    archives javadocJar
    archives sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            // Basic definitions are defined in root project
            pom.project {
                name 'ObjectBox Code Modifier'
                description 'Code modifier for ObjectBox (NoSQL for Objects)'

                licenses {
                    license {
                        name 'GNU General Public License, Version 3'
                        url 'http://www.gnu.org/licenses/gpl.txt'
                        distribution 'repo'
                    }
                }

            }
        }
    }
}
